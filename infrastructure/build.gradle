apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

// This is the library version used when deploying the artifact
version = "0.0.1-alpha"

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets { main { res.srcDirs = ['src/main/res', 'src/test/res'] } }
}

dependencies {
    compile 'com.android.support:support-annotations:25.3.1'
    compile "android.arch.lifecycle:runtime:1.0.0-alpha3"
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0-alpha3"
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.8.9'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

def siteUrl = 'https://github.com/albertopeam/Android-Architecture-Components'      // Homepage URL of the library
def gitUrl = 'https://github.com/albertopeam/Android-Architecture-Components.git'   // Git repository URL

task writeNewPom << {
    pom {
        project {
            inceptionYear '2017'
            packaging 'aar'

            // Add your description here
            name 'albertopeam.android:infrastructure'
            description = 'General purpose library for make use of multithreading and exception handling in Android.'
            url siteUrl

            // Set your license
            licenses {
                license {
                    name 'MIT License'
                    url 'https://github.com/albertopeam/Android-Architecture-Components/blob/master/LICENSE'
                }
            }
            developers {
                developer {
                    id 'albertopeam'
                    name 'Alberto Penas Amor'
                    email 'albertopeam@gmail.com'
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }.writeTo("$buildDir/poms/pom-default.xml")
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))  + configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.whenTaskAdded { task ->
    if (task.name == 'bintrayUpload') {
        task.dependsOn writeNewPom
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "android"
        name = "infrastructure"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["MIT"]
        publish = true
        version {
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password") //Optional. The passphrase for GPG signing'
            }
        }
    }
}
